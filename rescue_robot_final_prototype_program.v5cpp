{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ndistance Distance5 = distance(PORT5);\nmotor RightMotor = motor(PORT4, ratio18_1, true);\n\nmotor LeftMotor = motor(PORT3, ratio18_1, true);\n\ncontroller Controller1 = controller(primary);\nmotor ModMotor1 = motor(PORT6, ratio18_1, false);\n\nmotor ModMotor2 = motor(PORT7, ratio18_1, false);\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       Rescue Robot team                                         */\n/*    Created:      5/9/22                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n\n\nvoid onR1press(){\n  // To be implemented as a claw closer\n  while (Controller1.ButtonR1.pressing()) {\n    wait(5, msec);\n  }\n}\nvoid onL1press(){\n  //To be implemented as a claw opener\n  while (Controller1.ButtonL1.pressing()) {\n    wait(5, msec);\n  }\n}\n\nvoid onR2press(){\n  //stops all movement of the module\n  ModMotor1.stop();\n  ModMotor2.stop();\n  while (Controller1.ButtonR2.pressing()) {\n    wait(5, msec);\n  }\n}\n\nvoid onL2press(){\n//Javelin fire suppressor go!\n  ModMotor1.spin(reverse);\n  ModMotor2.spin(reverse);\n  //rough estimation for getting enough thrust potential\n  ModMotor1.setVelocity(20,rpm);\n  ModMotor2.setVelocity(20,rpm);\n  wait(3, seconds);\n  ModMotor1.stop();\n  ModMotor2.stop();\n  wait(2,seconds);\n  //LAUNCH!\n  ModMotor1.spin(forward);\n  ModMotor2.spin(forward);\n  ModMotor1.setVelocity(250,rpm);\n  ModMotor2.setVelocity(250,rpm);\n  wait(3, seconds);\n  ModMotor1.stop();\n  ModMotor2.stop();\n}\n\nvoid mainloop(bool module){\n  // Main functioning part of the program, allows for RC and Claw use.\n  // Object detection is also located here, which slows down the robot so as not to cause a collision\n  bool isObjClose = false;\n  \n  while(true){\n    \n    if (module) {\n      Controller1.ButtonL2.pressed(onL2press);\n    }\n    //axes and directional control for treads, set to slowly move backwards incase an object is in front\n    if (isObjClose){\n      RightMotor.setVelocity((Controller1.Axis2.position()+Controller1.Axis1.position())/3, percent);\n      RightMotor.spin(reverse);\n      LeftMotor.setVelocity((Controller1.Axis2.position()-Controller1.Axis1.position())/3, percent);\n      LeftMotor.spin(reverse);\n    } else {\n      RightMotor.setVelocity(Controller1.Axis2.position()+Controller1.Axis1.position(), percent);\n      LeftMotor.setVelocity(Controller1.Axis2.position()-Controller1.Axis1.position(), percent);\n      RightMotor.spin(forward);\n      LeftMotor.spin(forward);\n    }\n    wait(5,msec);\n    //claw movement\n    if (module) {\n      //misc buttons\n      Controller1.ButtonR1.pressed(onR1press);\n      Controller1.ButtonL1.pressed(onL1press);\n      //This button toggle claw lock\n      Controller1.ButtonR2.pressed(onR2press);\n      wait(15,msec);\n\n      //module motor movement, won't work with certain modules\n      ModMotor1.setVelocity(Controller1.Axis3.position(),percent);\n      ModMotor2.setVelocity(Controller1.Axis4.position(),percent);\n      ModMotor1.spin(forward);\n      ModMotor2.spin(forward);\n      wait(5,msec);\n\n    }\n    //distance sensor detector, stops motors and waits\n    if (Distance5.isObjectDetected()){\n      LeftMotor.stop();\n      RightMotor.stop();\n      wait(5,seconds);\n      isObjClose = true;\n    } else {\n      isObjClose = false;\n    }\n  }\n}\n\nint main() {\n  /*\n  Main initializes all components of the robot, such as the modularity aspect which detects what rescue module is located inside it.\n\n  This entire program is not tested, as this team has no vex brain to test it on :(\n  Oh well at least it compiles\n  */\n\n  Brain.Screen.print(\"VEXcode\");\n  bool hasModMotors = (ModMotor1.installed() and ModMotor2.installed());\n  //initialization of module, provides global variable for which module is in and thus disables certain methods from activating otherwise\n  if (hasModMotors) {\n    Brain.Screen.print(\"Module Detected\");\n    wait(2,seconds);\n    Brain.Screen.print(\"Choose which module you have\");\n    //TODO? prompt user to choose option on Screen, then set variables accordingly\n    //this... requires a GUI... that may not be implemented in time\n  }\n\n  mainloop(hasModMotors);\n}\n","textLanguage":"cpp","rconfig":[{"port":[5],"name":"Distance5","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{"id":"partner"},"triportSourcePort":22},{"port":[4],"name":"RightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"LeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[6],"name":"ModMotor1","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[7],"name":"ModMotor2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}